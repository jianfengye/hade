// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Pager 分页信息
// swagger:model pager
type Pager struct {

	// 当前页面
	// Required: true
	Page *int64 `json:"page"`

	// 单页个数
	// Required: true
	Size *int64 `json:"size"`

	// 总共页面数
	// Required: true
	TotalPage *int64 `json:"total_page"`
}

// Validate validates this pager
func (m *Pager) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Pager) validatePage(formats strfmt.Registry) error {

	if err := validate.Required("page", "body", m.Page); err != nil {
		return err
	}

	return nil
}

func (m *Pager) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

func (m *Pager) validateTotalPage(formats strfmt.Registry) error {

	if err := validate.Required("total_page", "body", m.TotalPage); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Pager) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Pager) UnmarshalBinary(b []byte) error {
	var res Pager
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
