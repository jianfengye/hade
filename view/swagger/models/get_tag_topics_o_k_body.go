// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetTagTopicsOKBody get tag topics o k body
// swagger:model getTagTopicsOKBody
type GetTagTopicsOKBody struct {

	// pager
	Pager *Pager `json:"pager,omitempty"`

	// topics
	Topics TopicSummarys `json:"topics,omitempty"`
}

// Validate validates this get tag topics o k body
func (m *GetTagTopicsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePager(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTopics(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetTagTopicsOKBody) validatePager(formats strfmt.Registry) error {

	if swag.IsZero(m.Pager) { // not required
		return nil
	}

	if m.Pager != nil {
		if err := m.Pager.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pager")
			}
			return err
		}
	}

	return nil
}

func (m *GetTagTopicsOKBody) validateTopics(formats strfmt.Registry) error {

	if swag.IsZero(m.Topics) { // not required
		return nil
	}

	if err := m.Topics.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("topics")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetTagTopicsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetTagTopicsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTagTopicsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
